# Generated by Django 4.1.4 on 2023-09-13 17:03

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(max_length=254, null=True, unique=True, verbose_name='email address')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('role', models.CharField(choices=[('ADMIN', 'Admin'), ('RIDER', 'Rider'), ('VENDOR', 'Vendor'), ('CUSTOMER', 'Customer'), ('VENDOR_EMPLOYEE', 'VendorEmployee')], default='ADMIN', max_length=50)),
                ('wallet', models.DecimalField(decimal_places=2, default=0.0, max_digits=20, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('otp', models.CharField(default='0000', max_length=4)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('location_lat', models.FloatField(blank=True, default=0, null=True)),
                ('location_long', models.FloatField(blank=True, default=0, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AboutEatup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('instagram', models.URLField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('about', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerOrder',
            fields=[
                ('id', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('PICKUP', 'pickup'), ('DELIVERY', 'delivery')], default='DELIVERY', max_length=20)),
                ('delivery_address', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=50, null=True)),
                ('delivery_period', models.CharField(choices=[('NOW', 'now'), ('LATER', 'later')], default='NOW', max_length=50)),
                ('later_time', models.DateTimeField(blank=True, null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('payment_method', models.CharField(blank=True, choices=[('WEB', 'web'), ('WALLET', 'wallet'), ('WEB_WALLET', 'web wallet')], max_length=20, null=True)),
                ('third_party_name', models.CharField(blank=True, max_length=100, null=True)),
                ('total_delivery_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('is_paid', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='MenuCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('summary', models.TextField(blank=True, null=True)),
                ('availability', models.BooleanField(blank=True, default=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=20, null=True)),
                ('quantity', models.CharField(choices=[('PER_WRAP', 'Per Wrap'), ('PER_SPOON', 'Per Spoon'), ('PER_PLATE', 'Per Plate')], max_length=64, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='vendor/menu_item/%Y/%m/%d')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='users.menucategory')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1)),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('note', models.TextField(blank=True, null=True)),
                ('customer_order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_order_items', to='users.customerorder')),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='users.menuitem')),
            ],
        ),
        migrations.CreateModel(
            name='VendorOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('pickup_time', models.TimeField(blank=True, null=True)),
                ('delivered_time', models.TimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('REQUESTED', 'Requested'), ('CANCELLED', 'Cancelled'), ('ON_DELIVERY', 'On Delivery'), ('READY', 'Ready'), ('DELIVERED', 'Delivered'), ('IN_PROGRESS', 'In Progress'), ('DELIVERY_FAILED', 'Delivery Failed'), ('ACCEPT_DELIVERY', 'Accept Delivery')], default='REQUESTED', max_length=50)),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('vat', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendors', to='users.customerorder')),
            ],
        ),
        migrations.CreateModel(
            name='WebhooksPaymentMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.JSONField(default=dict)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('event', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('reference', models.CharField(max_length=100)),
                ('payment_method', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VerifyPhone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('otp', models.CharField(max_length=64)),
                ('is_verified', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VendorRiderTransactionHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, choices=[('PAYOUT', 'payout'), ('INCOME', 'income')], max_length=100, null=True)),
                ('date_time', models.DateTimeField(auto_now_add=True)),
                ('comment', models.CharField(blank=True, max_length=54, null=True)),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('transaction_id', models.CharField(blank=True, default='', help_text='reference', max_length=100, null=True)),
                ('payment_method', models.CharField(blank=True, default='Bank Account', max_length=100, null=True)),
                ('transaction_status', models.CharField(choices=[('PROCESSING', 'Processing'), ('FAILED', 'Failed'), ('SUCCESS', 'Success')], default='PROCESSING', max_length=100)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.vendororder')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('rating', models.FloatField()),
                ('receiver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comment', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderSubItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('choices', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=64), default=list, size=None)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_items', to='users.orderitem')),
            ],
        ),
        migrations.AddField(
            model_name='orderitem',
            name='vendor_order',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_order_items', to='users.vendororder'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=64, null=True)),
                ('button_text', models.CharField(blank=True, max_length=64, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('link', models.URLField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='Rider',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='VendorEmployee',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='VendorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_rank', models.CharField(blank=True, max_length=64, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='vendor/profile_pictures/%Y/%m/%d')),
                ('business_name', models.CharField(blank=True, max_length=64, null=True)),
                ('business_description', models.TextField(blank=True, null=True)),
                ('business_address', models.CharField(blank=True, max_length=64, null=True)),
                ('store_type', models.CharField(blank=True, choices=[('INSTANT', 'instant'), ('BATCHES', 'batches'), ('PREORDER', 'preorder')], max_length=64, null=True)),
                ('number_of_stores', models.IntegerField(blank=True, null=True)),
                ('order_type', models.CharField(blank=True, choices=[('PICKUP', 'pickup'), ('DELIVERY', 'delivery'), ('PICKUP_AND_DELIVERY', 'pickup_and_delivery')], max_length=64, null=True)),
                ('delivery_type', models.CharField(blank=True, choices=[('PERSONAL_RIDERS', 'personal_riders'), ('PERSONAL_RIDERS_AND_EU_HEROES', 'personal_riders_and_eu_heroes'), ('EU_HEROES', 'eu_heroes')], max_length=64, null=True)),
                ('social_account_1', models.URLField(blank=True, null=True)),
                ('social_account_2', models.URLField(blank=True, null=True)),
                ('social_account_3', models.URLField(blank=True, null=True)),
                ('business_phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('business_email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='business email address')),
                ('preparation_time', models.IntegerField(blank=True, null=True)),
                ('minimum_order', models.IntegerField(blank=True, null=True)),
                ('no_of_orders', models.IntegerField(default=0)),
                ('amount_earned', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('average_star_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('total_rating', models.IntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.vendor')),
            ],
        ),
        migrations.AddField(
            model_name='vendororder',
            name='rider',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rider_orders', to='users.rider'),
        ),
        migrations.AddField(
            model_name='vendororder',
            name='vendor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vendor_orders', to='users.vendor'),
        ),
        migrations.CreateModel(
            name='VendorEmployeeProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('food_availability', models.BooleanField(default=False)),
                ('wallet_withdrawal', models.BooleanField(default=False)),
                ('price_change', models.BooleanField(default=False)),
                ('position', models.CharField(max_length=54)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.vendoremployee')),
            ],
        ),
        migrations.CreateModel(
            name='VendorEmployeePair',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vendor', to='users.vendoremployee')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee', to='users.vendor')),
            ],
        ),
        migrations.CreateModel(
            name='RiderProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_id', models.CharField(max_length=64, unique=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='rider/profile_pictures/%Y/%m/%d')),
                ('orders_completed', models.IntegerField(default=0)),
                ('amount_earned', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('rider_available', models.BooleanField(default=False)),
                ('rider_in_delivery', models.BooleanField(default=False)),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('borrowed', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('borrow_limit', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('date_allocated', models.DateField(blank=True, null=True)),
                ('period_of_repayment', models.FloatField(blank=True, null=True)),
                ('cost_of_acquisition', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('return_on_investment', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('bike_type', models.CharField(blank=True, max_length=64, null=True)),
                ('bike_color', models.CharField(blank=True, max_length=64, null=True)),
                ('reg_name', models.CharField(blank=True, max_length=64, null=True)),
                ('chasis_num', models.CharField(blank=True, max_length=64, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.rider')),
            ],
        ),
        migrations.CreateModel(
            name='MenuSubItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('max_num_choices', models.IntegerField(default=0)),
                ('choices', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=64), default=list, size=None)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_items', to='users.menuitem')),
            ],
            options={
                'unique_together': {('item', 'name')},
            },
        ),
        migrations.AddField(
            model_name='menuitem',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_menu_items', to='users.vendor'),
        ),
        migrations.AddField(
            model_name='menucategory',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='users.vendor'),
        ),
        migrations.CreateModel(
            name='CustomerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='customer/profile_pictures/%Y/%m/%d')),
                ('sms_notification', models.BooleanField(default=False)),
                ('email_notification', models.BooleanField(default=False)),
                ('push_notification', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.customer')),
            ],
        ),
        migrations.AddField(
            model_name='customerorder',
            name='customer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_orders', to='users.customer'),
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_number', models.CharField(default='', max_length=64)),
                ('account_name', models.CharField(default='', max_length=64)),
                ('bank_name', models.CharField(default='', max_length=64)),
                ('bank_code', models.CharField(max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'account_number')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='menuitem',
            unique_together={('category', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='menucategory',
            unique_together={('vendor', 'name')},
        ),
    ]
