# Generated by Django 4.1.4 on 2022-12-20 14:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('role', models.CharField(choices=[('ADMIN', 'Admin'), ('RIDER', 'Rider'), ('VENDOR', 'Vendor'), ('CUSTOMER', 'Customer')], default='ADMIN', max_length=50)),
                ('wallet', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VerifyPhone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('otp', models.IntegerField()),
                ('is_verified', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VendorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_rank', models.CharField(blank=True, max_length=64, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='vendor/profile_pictures/%Y/%m/%d')),
                ('business_name', models.CharField(blank=True, max_length=64, null=True)),
                ('business_description', models.TextField(blank=True, null=True)),
                ('business_address', models.CharField(blank=True, max_length=64, null=True)),
                ('store_type', models.CharField(blank=True, choices=[('INSTANT', 'instant'), ('BATCHES', 'batches'), ('PREORDER', 'preorder')], max_length=64, null=True)),
                ('number_of_stores', models.IntegerField(blank=True, null=True)),
                ('order_type', models.CharField(blank=True, choices=[('PICKUP', 'pickup'), ('DELIVERY', 'delivery'), ('PICKUP_AND_DELIVERY', 'pickup_and_delivery')], max_length=64, null=True)),
                ('delivery_type', models.CharField(blank=True, choices=[('PERSONAL_RIDERS', 'personal_riders'), ('PERSONAL_RIDERS_AND_EU_HEROES', 'personal_riders_and_eu_heroes'), ('EU_HEROES', 'eu_heroes')], max_length=64, null=True)),
                ('social_account_1', models.URLField(blank=True, null=True)),
                ('social_account_2', models.URLField(blank=True, null=True)),
                ('social_account_3', models.URLField(blank=True, null=True)),
                ('business_phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('business_email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='email address')),
                ('preparation_time', models.IntegerField(blank=True, null=True)),
                ('minimum_order', models.IntegerField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RiderProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_id', models.CharField(max_length=64, unique=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='rider/profile_pictures/%Y/%m/%d')),
                ('orders_completed', models.IntegerField(default=0)),
                ('rider_available', models.BooleanField(default=False)),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('date_allocated', models.DateField(blank=True, null=True)),
                ('period_of_repayment', models.FloatField(blank=True, null=True)),
                ('cost_of_acquisition', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('return_on_investment', models.FloatField(blank=True, null=True)),
                ('bike_type', models.CharField(blank=True, max_length=64, null=True)),
                ('bike_color', models.CharField(blank=True, max_length=64, null=True)),
                ('reg_name', models.CharField(blank=True, max_length=64, null=True)),
                ('chasis_num', models.CharField(blank=True, max_length=64, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='vendor/profile_pictures/%Y/%m/%d')),
                ('sms_notification', models.BooleanField(default=False)),
                ('email_notification', models.BooleanField(default=False)),
                ('push_notification', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_num', models.CharField(max_length=64)),
                ('account_name', models.CharField(max_length=64)),
                ('bank_name', models.CharField(max_length=64)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='Rider',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('users.user',),
        ),
    ]
